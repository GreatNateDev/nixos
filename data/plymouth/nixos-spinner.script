# NixOS Windows-style boot animation

# Screen dimensions
screen_width = Window.GetWidth();
screen_height = Window.GetHeight();

# NixOS logo - scale it down to reasonable size
logo_image = Image("logo.png");
# Scale to max 128px while maintaining aspect ratio
target_width = 256;
target_height = 256;
logo.image = logo_image.Scale(target_width, target_height);
logo.sprite = Sprite(logo.image);
logo.width = logo.image.GetWidth();
logo.height = logo.image.GetHeight();
logo.x = screen_width / 2 - logo.width / 2;
logo.y = screen_height / 2 - logo.height / 2 - 80;
logo.sprite.SetPosition(logo.x, logo.y, 10);

# Spinner dots (5 dots like Windows)
spinner_radius = 30;
num_dots = 5;
spinner_center_x = screen_width / 2;
spinner_center_y = screen_height / 2 + 120;

# Create dots with simple circle images instead of text
for (i = 0; i < num_dots; i++) {
    dot_sprite[i] = Sprite();
    # Create a simple white dot
    dot_image[i] = Image.Text("●", 0.8, 0.8, 0.8, 1, "Sans Bold 20");
    dot_sprite[i].SetImage(dot_image[i]);
    dot_sprite[i].SetOpacity(0);
}

# Animation progress
progress = 0;

fun refresh_callback() {
    progress += 0.08;

    # Update spinner dots position
    for (i = 0; i < num_dots; i++) {
        angle = (progress + i * 2 * 3.14159 / num_dots);
        x = spinner_center_x + Math.Cos(angle) * spinner_radius - 10;
        y = spinner_center_y + Math.Sin(angle) * spinner_radius - 10;

        # Fade effect - dots fade in and out as they rotate
        fade_angle = (angle % (2 * 3.14159));
        fade = 0.2 + 0.8 * ((Math.Cos(fade_angle * 2) + 1) / 2);

        dot_sprite[i].SetOpacity(fade);
        dot_sprite[i].SetPosition(x, y, 100);
    }
}

Plymouth.SetRefreshFunction(refresh_callback);

# Message display
message_sprite = Sprite();
message_sprite.SetPosition(screen_width / 2, screen_height - 50, 10000);

fun message_callback(text) {
    image = Image.Text(text, 0.8, 0.8, 0.8, 1, "Sans 12");
    message_sprite.SetImage(image);
}

Plymouth.SetMessageFunction(message_callback);
